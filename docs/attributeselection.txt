Attribute selection module
==============

<!-- {{TOC}} -->


The attribute selection module is implemented as an Authentication Processing Filter. That 
means it can be configured in the global config.php file or the SP remote or 
IdP hosted metadata.

It is recommended to run the attribute selection module at the IdP, and configure the 
filter to run after all attribute mangling filters is completed, to show the 
user the exact same attributes that are sent to the SP.

  * [Read more about processing filters in SimpleSAMLphp](simplesamlphp-authproc)


How to setup the attribute selection module
-------------------------------

The attribute selection module is enabled by default. In case you want to disable the module 
run the following command:
	
    mv modules/attributeselection/default-enable modules/attributeselection/disable 

The simplest way to setup the attribute selection module is:

Example:

    80 => array(
        'class' => 'attributeselection:AttributeSelection',
        'intro' => 'Actual text goes here. This will be inserted between the head and the table with the attribute', // default to null
        'selectattributes' => array(
            'eduPersonEntitlement' => array(
                'mode' => 'check', // no default throw module config error
                'description' => 'ekAtomoTitlos', // defaults to key
                'regex' => '/\bgroup:/', // defaults to null
            ),
            'eduPersonScopedAffiliation' => array(
                'mode' => 'radio',
            ),
            'schacHomeOrganization' => array(
                'mode' => 'radio',
            ),
        ),
    ),

Options
-------

The following option can be used when configuring the attribute selection module

`selectattributes`
:   An array that indicate which attributes should be used.
    You must define the attributes as keys of this array and as values
    the way that you will select the values of each attribute.
    The options values are 'check' (checkboxes) and 'radio' (radio buttons).
    If 'check' is defined then the user can select none, one or more values 
    for a attribute. If 'radio' is checked then the user should define exactlly 
    one attribute.

External options
----------------

The following options can/ be set in other places in SimpleSAMLphp

`privacypolicy`
:   This is an absolute URL for where an user can find a privacy policy for SP. 
    If set, this will be shown on the attribute selection page. %SPENTITYID% in the URL 
    will be replaced with the entityID of the service provider.

    This option can be set in 
    [SP-remote metadata](./simplesamlphp-reference-sp-remote) and in 
    [IdP-hosted metadata](./simplesamlphp-reference-idp-hosted). The entry in 
    the SP-remote metadata overrides the option in the IdP-hosted metadata.

`attributeselection.disable`
:   Disable attribute selection for a set of services. See section `Disabling attribute selection`

`userid.attribute`
:   Unique identifier that is released for all users. See section `Configure
    the user ID`.


Disabling attribute selection
-----------------

attribute selection can be disabled either in the IdP metadata or in the SP metadata.
To disable attribute selection for one or more SPs for a given IdP, add the
`attributeselection.disable`-option to the IdP metadata. To disable attribute selection for one or
more IdPs for a given SP, add the `attributeselection.disable`-option to the SP metadata.

### Examples ###

Disable attribute selection for a given IdP:

    $metadata['https://idp.example.org/'] = array(
        [...],
        'attributeselection.disable' => TRUE,
    );

Disable attribute selection for some SPs connected to a given IdP:

    $metadata['https://idp.example.org/'] = array(
        [...],
        'attributeselection.disable' => array(
            'https://sp1.example.org/',
            'https://sp2.example.org/',
        ),
    );


Disable attribute selection for a given SP:

    $metadata['https://sp.example.org'] = array(
        [...]
        'attributeselection.disable' => TRUE,
    ),

Disable attribute selection for some IdPs for a given SP:

    $metadata['https://sp.example.org'] = array(
        [...]
        'attributeselection.disable' => array(
            'https://idp1.example.org/',
            'https://idp2.example.org/',
        ),
    ),


Attribute presentation
----------------------
 
It is possible to change the way the attributes are represented in the attribute selection
page. This is done by implementing an attribute array reordering function.

To create this function, you have to create a file named

    hook_attributepresentation.php 

and place it under

    <module_name>/hooks 

directory. To be found and called, the function must be named 

    <module_name>_hook_attributepresentation(&$para).

The parameter $para is an reference to the attribute array. By manipulating 
this array you can change the way the attribute are presented to the user on 
the attribute selection and status page. 

If you want the attributes to be listed in more than one level, you can make 
the function add a child_ prefix to the root node attribute name in a recursive 
attribute tree.


### Examples ###

These values will be listed as an bullet list
    
    Array (
        [objectClass] => Array (
            [0] => top
            [1] => person
        )
    )

This array has two child arrays. These will be listed in two separate sub
tables.

    Array (
        [child_eduPersonOrgUnitDN] => Array (
            [0] => Array (
                [ou] => Array (
                    [0] => ET
                )
                [cn] => Array (
                    [0] => Eksterne tjenester
                )
            )
            [1] => Array (
                [ou] => Array (
                    [0] => TA
                )
                [cn] => Array (
                    [0] => Tjenesteavdeling
                )
            )
        )
    )
